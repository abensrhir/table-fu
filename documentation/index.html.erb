<%
require 'uv'
require 'table_fu'
require 'FasterCSV'

def code_for(file, output=true)
  return '' unless File.exists?("examples/#{file}.rb")
  file = File.open("examples/#{file}.rb").read
  html = Uv.parse(file, "xhtml", "ruby", false, "dawn", false)
  out = ''
  if output
    csv =<<-CSV
Author,Best Book,Number of Pages,Style
Samuel Beckett,Malone Muert,120,Modernism
James Joyce,Ulysses,644,Modernism
Nicholson Baker,Mezannine,150,Minimalism
Vladimir Sorokin,The Queue,263,Satire
    CSV
    if block_given?
      out = yield instance_eval(file)
    else
      out = instance_eval(file).inspect
    end
    out = "<em>Produces:</em>" + Uv.parse(out, 'xhtml', 'ruby', false, 'dawn', false)
  end
  "#{html}#{out}"
end
%>
<!DOCTYPE html>
<html>
  <head>
    <meta http-equiv="content-type" content="text/html;charset=UTF-8" />    
    <title>TableFu</title>
    <link rel="stylesheet" type="text/css" href="documentation/css/styles.css" />
    
    <link rel="stylesheet" type="text/css" href="documentation/css/dawn.css" />

  </head>
  
  <body>
    <a href="http://www.propublica.org" class="propublica">&nbsp;</a>
    <h1>TableFu <small>&ndash; Version: <%= 
    config = YAML.load(File.read('VERSION.yml'))
    "#{config[:major]}.#{config[:minor]}.#{config[:patch]}"
    %></small></h1>

    <p><strong>TableFu</strong> is a utility for spreadsheet-style handling for arrays (e.g. filtering, formatting, and sorting). In addition, it has the ability to <a href="#facet">facet</a> &mdash; or group &mdash; rows according to cell value. It was developed as a backend for its sister project <a href="http://www.github.com/propublica/table-setter">Table Setter</a>.</p>
    <p>For example, <strong>TableFu</strong> can consume a csv file and sort on a column:
        <%= code_for "sort_by_column" do |ret|
              ret.rows.inspect
            end
        %>
    </p>
    <h2><a name="toc">Table of Contents</a></h2>
    <ul>
      <li><a href="#installation">Installation</a></li>
      <li><a href="#usage">Usage</a></li>
      <li><a href="#faceting">Faceting</a></li>
      <li><a href="#macros">Macros / Formatting</a></li>
      <li><a href="#manipulation">Manipulation</a></li>
      <li><a href="#credits">Credits</a></li>
      <li><a href="#license">License</a></li>
    </ul>
    <h2><a name="installation" href="#toc">Installation</a></h2>
    <p><strong>TableFu</strong> is available as a rubygem:
<pre class="dawn">
 gem install table_fu</pre>
      or from the actual source:
<pre class="dawn">
 git clone git://github.com/propublica/table-fu.git
 cd table-fu
 rake install</pre>
</p>
    <h2><a name="usage" href="#toc">Usage</a></h2>
    <p>
      The <strong>TableFu</strong> constructor takes two arguments: a 2 dimensional array and a hash of column options or a block. The simple options are:
      <ul>
        <li><code>=> sorted_by</code> the column to sort by.
          <%= code_for "sort_by_column" do |ret|
                ret.rows.inspect
              end
          %>
        </li>
        <li><code>=> columns</code> the columns to include in the table, useful when reordering and filtering extraneous columns.
        <%= code_for "columns" %>
        Note that the columns are still accessible directly even if they're not in the columns array.
        <%= code_for "columns_hidden" %>
        </li>
      </ul>
      The other two options <code>faceting</code> and <code>formatting</code> are described below.
    </p>
    <h2><a name="faceting" href="#toc">Faceting</a></h2>
    
    <h2><a name="macros" href="#toc">Macros / Formatting</a></h2>
    
    <h2><a name="manipulation" href="#toc">Manipulation</a></h2>
    <h2><a name="credits" href="#toc">Credits</a></h2>
    <p>Brian Boyer came up with the idea, Mark Percival extracted the implementation into a gem, and Jeff Larson provided bugfixes and documentation.</p>
    <h2><a name="license" href="#toc">License</a></h2>
    <pre><%= File.open("LICENSE").read %></pre>
  </body>
</html>
